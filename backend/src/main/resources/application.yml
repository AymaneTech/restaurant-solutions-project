spring:
  datasource:
    url: ${DB_URL}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      dialect: org.hibernate.dialect.PostgreSQLDialect
  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.yaml
  servlet:
    multipart:
      enabled: true

server:
  port: 8083

app:
  open-api:
    server:
      url: http://localhost:8081
      description: API for User management, roles, authorities, and authentication using Spring Security.
    info:
      title: User Management Service API
      version: 1.0.0
      description: |
        This API provides functionalities to manage:
        - **User Management**: CRUD operations for users, including registration and profile management.
        - **Role Management**: Assign and manage roles for users.
        - **Authority Management**: Manage the authorities (permissions) associated with roles.
        - **Authentication**: Secure user authentication using Spring Security, including JWT token generation and validation.
      contact:
        name: Aymane El Maini
        email: elmainiaymane03@gmail.com
        url: https://aymaneelmaini.vercel.app
  cloudinary:
    url: ${CLOUDINARY_URL}